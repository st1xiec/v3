module.exports.run = async (bot, message, args, data) => {
    const reason = args.slice(1).join(" "),
        rUser = await message.mentions.members.first() || message.guild.members.cache.get(bot.toNum(args[0]))
    if (!args[0]) return bot.sendErrEmbed(new global.MessageEmbed(), 'üíæ –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ @', message);
    if (!rUser) return bot.sendErrEmbed(new global.MessageEmbed(), '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.', message);
    if (!reason) return bot.sendErrEmbed(new global.MessageEmbed(), 'üßæ –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã', message);
    message.react('‚úÖ');
    message.react('üìÆ');
    message.author.send(`**–í–∞—à —Ä–µ–ø–æ—Ä—Ç –Ω–∞ ${user} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è c –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è.**`);
    let reportsChannel = await message.guild.channels.cache.get(data.Guild.reportChannel)
    if (!reportsChannel) {
        reportsChannel = await message.guild.channels.create(`üëÆ‚Äçreports-channel`, {
            type: 'text'
        })
        await global.Collection.Guild.upsertOne({
            GuildId: message.guild.id
        }, {
            reportChannel: reportsChannel.id
        })
        await reportsChannel.overwritePermissions([{
          id: message.guild.roles.cache.get(e => e == '@everyone'),
            allow: ["VIEW_CHANNEL"],
            deny: ["CONNECT"]
        }]);
        await reportsChannel.setPosition(1);
    }
    await reportsChannel.send(
        new global.MessageEmbed()
            .setColor('#36393f')
            .addField(`–ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞.`, `**${message.author} –ü–æ–∂–∞–ª–æ–≤–∞–ª—Å—è –Ω–∞: ${rUser}**`)
            .addField(`–¢–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã:`, reason)
    )
    message.delete()
    global.addMark(true, '‚öúÔ∏è', data.User, message);
};
module.exports.help = {
    name: 'report',
    aliases: ['rep', '—Ä–µ–ø–æ—Ä—Ç', '–ø–æ–º–æ–≥–∏—Ç–µ'],
    description: '–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞',
    category: '–ú–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ',
    usages: {
        'report @User#0001 Text.': '–û—Ç–ø—Ä–∞–≤–∏—Ç –∂–∞–ª–æ–±—É –Ω–∞ @User#0001 M–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.',
        'report @User#0001 –ü–ª–æ—Ö–æ —Å–µ–±—è –≤–µ–¥–µ—Ç.': '–û—Ç–ø—Ä–∞–≤–∏—Ç –∂–∞–ª–æ–±—É –Ω–∞ @User#0001 M–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º (–ü–ª–æ—Ö–æ —Å–µ–±—è –≤–µ–¥–µ—Ç.)'
    }
};