module.exports.run = async(bot, message, args, data) => {
    if (!message.member.hasPermission("BAN_MEMBERS")) return;
    const embed = new global.MessageEmbed().setColor("FF8A14").setTitle("–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞.");
    const rUser = await message.mentions.members.first() || message.guild.members.cache.get(bot.toNum(args[0]));
    if (!rUser) return bot.sendErrEmbed(embed, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω | –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ @", message);
    if (!rUser.bannable) return bot.sendErrEmbed(embed, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **\`${rUser.user.tag}\`** –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å.`, message);
    const sym = args[1] ? args[1].split("").reverse()[0] : undefined;
    const time = bot.toNum(args[1]);
    console.log(sym)
    console.log(time)
    let reason = args.slice(2).join(" ");
    async function ban(time, content, reason) {
        embed.addField(`**\`${message.author.tag}\` –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª \`${rUser.user.tag}\`**`, `**–í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: \`${!time ? "–ù–∞–≤—Å–µ–≥–¥–∞." : content}\`**\n**–ü—Ä–∏—á–∏–Ω–∞: \`${!reason ? "–ù–µ —É–∫–∞–∑–∞–Ω–∞." : reason}\`**`);
        global.addMark(true, "üî®", data.User, message);
        rUser.send(embed).catch(err => err);
        message.channel.send(embed)
        await message.guild.members.ban(rUser, {
            reason
        });
        if (time) {
            await global.Collection.Member.upsertOne({
                GuildId: message.guild.id,
                UserId: rUser.id
            }, {
                Ban: Date.now() + time
            });
            global.handlerBan({
                UserId: rUser.id,
                GuildId: message.guild.id
            }, time);
        }
    }
    if (isNaN(time)) {
        ban(null, null, args.slice(1).join(" "));
    } else {
        if (["s", "—Å", "sec", "—Å–µ–∫", "c"].some(e => e === sym.toLowerCase())) return ban(time * 1000, global.uts(time, "—Å–µ–∫—É–Ω–¥—É", "—Å–µ–∫—É–Ω–¥—ã", "—Å–µ–∫—É–Ω–¥"), reason);
        if (["m", "–º", "min", "–º–∏–Ω"].some(e => e === sym.toLowerCase())) return ban(60 * time * 1000, global.uts(time, "–º–∏–Ω—É—Ç—É", "–º–∏–Ω—É—Ç—ã", "–º–∏–Ω—É—Ç"), reason);
        if (["h", "—á", "hours", "—á–∞—Å"].some(e => e === sym.toLowerCase())) return ban(60 * 60 * time * 1000, global.uts(time, "—á–∞—Å", "—á–∞—Å–∞", "—á–∞—Å–æ–≤"), reason);
        if (["d", "–¥", "day", "–¥–µ–Ω—å"].some(e => e === sym.toLowerCase())) return ban(60 * 60 * 24 * time * 1000, global.uts(time, "–¥–µ–Ω—å", "–¥–Ω—è", "–¥–Ω–µ–π"), reason);
        if (["w", "–Ω", "week", "–Ω–µ–¥–µ–ª—è"].some(e => e === sym.toLowerCase())) return ban(60 * 60 * 24 * 7 * time * 1000, global.uts(time, "–Ω–µ–¥–µ–ª—é", "–Ω–µ–¥–µ–ª–∏", "–Ω–µ–¥–µ–ª—å"), reason);
        if (["y", "–≥", "year", "–≥–æ–¥"].some(e => e === sym.toLowerCase())) return ban(60 * 60 * 24 * 7 * 365 * time * 1000, global.uts(time, "–≥–æ–¥", "–≥–æ–¥–∞", "–ª–µ—Ç"), reason);
        ban(time, global.uts(time, "–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—É", "–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã", "–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥"), reason);
    }
};
module.exports.help = {
    name: "ban",
    aliases: ["–±–∞–Ω", "—Ç–µ–º–ø–±–∞–Ω", "tempban", "–∑–∞–±–∞–Ω–∏—Ç—å", "–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å"],
    description: "–ó–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.",
    category: "–ú–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ",
    usages: {
        "ban @User#0001 1h": "–ó–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ 1 —á–∞—Å.",
        "ban @User#0001": "–ó–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞–≤—Å–µ–≥–¥–∞."
    }
};