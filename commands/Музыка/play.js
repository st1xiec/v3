const YouTube = require('simple-youtube-api'),
    ytdl = require('ytdl-core'),
    tokens = require('../../keys.json');
let token = global.config.activetoken,
    youtube = new YouTube(token);
if (token == "0") {
    global.config.activetoken = tokens[0].key
    global.fs.writeFileSync('../../config.json', JSON.stringify(global.config, null, '\t'))
    token = tokens[0].key
}
module.exports.run = async (bot, message, args) => {
    let query = args.join(' '),
        res = [],
        msg;
    let musicEmbed = new global.MessageEmbed().setColor('#8F00FF').setTitle('üéµ | –ü–æ–∏—Å–∫ —Ç—Ä–µ–∫–∞...')
    if (!query) {
        musicEmbed.setTitle('üéµ | –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ / –°—Å—ã–ª–∫—É –Ω–∞ YouTube —Ç—Ä–µ–∫.')
        return message.channel.send(musicEmbed);
    }
    let join;
    try {
        join = await message.member.voice.channel.join()
    } catch (err) {
        musicEmbed.setTitle('üéµ | –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É');
        console.error(err);
        return message.channel.send(musicEmbed);
    }
    if (!bot.servers[message.guild.id]) {
        bot.servers[message.guild.id] = {
            queue: [],
            channel: message.channel.id,
        };
    }
    msg = await message.channel.send(musicEmbed);
    if (query.includes('://www.youtube.com/watch') == true) try {
        try {
            res.push(await youtube.getVideo(query));
        } catch (e) {
            let b = tokens.find(x => x.date < Date.now())
            for (let i = 0; i < tokens.length; i++) {
                if (tokens[i].key == global.config.activetoken) {
                    tokens[i].date = `${Date.now() + 1000 * 60 * 60 * 12}`
                    global.fs.writeFileSync('../../keys.json', JSON.stringify(tokens, null, '\t'))
                }
            }
            global.config.activetoken = b.key;
            global.fs.writeFileSync('../../config.json', JSON.stringify(global.config, null, '\t'))
            youtube = new YouTube(b.key);
            return bot.sendErrEmbed(new global.MessageEmbed(), '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É –µ—â–µ —Ä–∞–∑.', true, message);
        }
    } catch (err) {
        musicEmbed.setTitle('üéµ | –í–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
        return msg.edit(musicEmbed);
    } else try {
        res = await youtube.searchVideos(query, 1);
    } catch (e) {
        let b = tokens.find(x => x.date < Date.now())
        for (let i = 0; i < tokens.length; i++) {
            if (tokens[i].key == global.config.activetoken) {
                tokens[i].date = `${Date.now() + 1000 * 60 * 60 * 12}`
                global.fs.writeFileSync('../../keys.json', JSON.stringify(tokens, null, '\t'))
            }
        }
        global.config.activetoken = b.key;
        global.fs.writeFileSync('../../config.json', JSON.stringify(global.config, null, '\t'))
        youtube = new YouTube(b.key);
        return bot.sendErrEmbed(new global.MessageEmbed(), '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É –µ—â–µ —Ä–∞–∑.', true, message);
    }
    if (!res[0]) {
        musicEmbed.setTitle('üéµ | –¢—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.')
        return msg.edit(musicEmbed);
    }
    musicEmbed.setTitle('üéµ | –ú—É–∑—ã–∫–∞')
    if (!bot.servers[message.guild.id].dispatcher) {
        musicEmbed.addField('–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: ', `**${res[0].title}**`, true)
        musicEmbed.addField('–¢—Ä–µ–∫ –ø–æ—Å—Ç–∞–≤–∏–ª:', `**${message.author.tag}**`, true)
        await bot.servers[message.guild.id].queue.push({
            url: `${res[0].id}`,
            author: `${message.author.tag}`
        })
        await bot.play(ytdl, message, join)
        msg.edit(musicEmbed);
    } else {
        if (bot.servers[message.guild.id].queue.length >= 5) return bot.sendErrEmbed(new global.MessageEmbed(), '–î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏.', true, message);
        musicEmbed.addField('–¢—Ä–µ–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å:', `**${res[0].title}**`, true)
        musicEmbed.addField('–¢—Ä–µ–∫ –ø–æ—Å—Ç–∞–≤–∏–ª:', `**${message.author.tag}**`, true)
        await bot.servers[message.guild.id].queue.push({
            url: `${res[0].id}`,
            author: `${message.author.tag}`
        })
        msg.edit(musicEmbed);
    }
}
module.exports.help = {
    name: 'play',
    aliases: ['–ø–ª–µ–π', '–º—É–∑—ã–∫–∞', '—Ö–∞—á—é–º—É–∑—ã–∫—É'],
    description: '–í–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É.',
    usages: {
        'play –ù–∞–∑–≤–∞–Ω–∏–µ/–°—Å—ã–ª–∫–∞': '–ò–≥—Ä–∞—Ç—å –º—É–∑—ã–∫—É.'
    },
    category: '–ú—É–∑—ã–∫–∞'
};